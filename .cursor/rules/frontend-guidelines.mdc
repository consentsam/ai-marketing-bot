---
description: 
globs: 
alwaysApply: true
---
# Frontend Rules for YieldFi AI Agent (Streamlit App)

> **Summary**  
> - Purpose: Provide UI structure & best practices for Streamlit.  
> - Rationale: Consistent user experience, clarity in code.  
> - Usage: For `app.py` & `src/ui/` components.  
> - TODOs: Add more details if switching from Streamlit to another framework.

---

## 1. Component Naming & File Structure
- Use clear function names in `app.py` or `src/ui/` (e.g. `display_tweet_input()`).  
- Group related UI helpers in `src/ui/`.  
- Keep `app.py` as the orchestrator for major layout & flow.

---

## 2. UI Testing Patterns
- Test underlying backend logic thoroughly; UI is often tested manually in Streamlit.  
- **User Acceptance Testing**: Keep a short test script for manual checks (e.g., “Load app, select Mode: Degen, verify slang in output.”).  
- Optionally, mock `st.*` calls if writing unit tests for UI helper functions.

---

## 3. State & Props Conventions (Streamlit)
- Use `st.session_state` for cross-rerun persistence.  
- Initialize needed session vars at script start.  
- Pass data to UI components via function args or session state—avoid hidden global state.

---

## 4. Styling (Streamlit Defaults & Custom CSS)
- Prefer built-in layout containers.  
- If needed, inject minimal custom CSS via `st.markdown(unsafe_allow_html=True)`.  
- Maintain a consistent, minimal design.

---

## 5. Accessibility
- Provide descriptive labels for inputs (`st.text_input`, etc.).  
- Make the flow logical; test the reading order.  
- Keep color usage and layout mindful of accessibility best practices.
